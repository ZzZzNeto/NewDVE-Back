openapi: 3.0.3
info:
  title: NewDVE_Back API
  version: 1.0.0
  description: Documentation of API endpoints of NewDVE_Back
paths:
  /api/addresses/:
    get:
      operationId: api_addresses_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - 
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressList'
          description: ''
    post:
      operationId: api_addresses_create
      tags:
      - 'address'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/addresses/{id}/:
    get:
      operationId: api_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: api_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: api_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: api_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/announce_images/:
    get:
      operationId: api_announce_images_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnouncement_imageList'
          description: ''
    post:
      operationId: api_announce_images_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement_image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement_image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement_image'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement_image'
          description: ''
  /api/announce_images/{id}/:
    get:
      operationId: api_announce_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement_image.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement_image'
          description: ''
    put:
      operationId: api_announce_images_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement_image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement_image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement_image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement_image'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement_image'
          description: ''
    patch:
      operationId: api_announce_images_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement_image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement_image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement_image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement_image'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement_image'
          description: ''
    delete:
      operationId: api_announce_images_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement_image.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/announces/:
    get:
      operationId: api_announces_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnnouncementList'
          description: ''
    post:
      operationId: api_announces_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
  /api/announces/{id}/:
    get:
      operationId: api_announces_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
    put:
      operationId: api_announces_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
    patch:
      operationId: api_announces_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnnouncement'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
    delete:
      operationId: api_announces_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/announces/{id}/save_unsave/:
    post:
      operationId: api_announces_save_unsave_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
  /api/announces/{id}/subscribe_unsubscribe/:
    post:
      operationId: api_announces_subscribe_unsubscribe_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this announcement.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announcement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Announcement'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: ''
  /api/ratings/:
    get:
      operationId: api_ratings_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRatingList'
          description: ''
    post:
      operationId: api_ratings_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
  /api/ratings/{id}/:
    get:
      operationId: api_ratings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    put:
      operationId: api_ratings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    patch:
      operationId: api_ratings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRating'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
    delete:
      operationId: api_ratings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rating.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tags/:
    get:
      operationId: api_tags_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: api_tags_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/tags/{id}/:
    get:
      operationId: api_tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: api_tags_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: api_tags_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: api_tags_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/user_files/:
    get:
      operationId: api_user_files_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUser_fileList'
          description: ''
    post:
      operationId: api_user_files_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_file'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_file'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User_file'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_file'
          description: ''
  /api/user_files/{id}/:
    get:
      operationId: api_user_files_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user_file.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_file'
          description: ''
    put:
      operationId: api_user_files_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user_file.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_file'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_file'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User_file'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_file'
          description: ''
    patch:
      operationId: api_user_files_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user_file.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser_file'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser_file'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser_file'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_file'
          description: ''
    delete:
      operationId: api_user_files_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user_file.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/me/:
    get:
      operationId: api_users_me_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /auth-token/:
    post:
      operationId: auth_token_create
      tags:
      - auth-token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        state:
          type: string
          maxLength: 2
        city:
          type: string
          maxLength: 50
        district:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        number:
          type: string
          maxLength: 10
        cep:
          type: string
          maxLength: 9
      required:
      - cep
      - city
      - id
      - state
      - street
    Announcement:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        schedule:
          type: string
          maxLength: 30
        salary:
          type: number
          format: double
          nullable: true
        journey:
          type: string
          maxLength: 100
        vacancies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        deadline:
          type: string
          format: date
        benefits:
          type: string
          nullable: true
          maxLength: 500
        requeriments:
          type: string
          nullable: true
          maxLength: 500
        description:
          type: string
          nullable: true
          maxLength: 500
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        curriculum:
          type: boolean
        course:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CourseEnum'
          - $ref: '#/components/schemas/NullEnum'
        total_workload:
          type: string
          nullable: true
          maxLength: 3
        inscripts:
          type: array
          items:
            $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        creator:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        images:
          type: string
          readOnly: true
      required:
      - address
      - company_name
      - creator
      - curriculum
      - deadline
      - images
      - inscripts
      - journey
      - schedule
      - tags
      - vacancies
    Announcement_image:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        announcement:
          type: integer
      required:
      - announcement
      - id
      - image
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    CourseEnum:
      enum:
      - ALIMENTOS
      - APICULTURA
      - INFORMATICA
      - ADS
      - QUIMICA
      - AGROINDUSTRIA
      type: string
      description: |-
        * `ALIMENTOS` - Alimentos
        * `APICULTURA` - Apicultura
        * `INFORMATICA` - Informatica
        * `ADS` - Analise e desenvolvimento de sistemas
        * `QUIMICA` - Quimica
        * `AGROINDUSTRIA` - Agroindustria
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - id
      - name
    NullEnum:
      enum:
      - null
    PaginatedAddressList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    PaginatedAnnouncementList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Announcement'
    PaginatedAnnouncement_imageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Announcement_image'
    PaginatedRatingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Rating'
    PaginatedTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUser_fileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User_file'
    PatchedAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        state:
          type: string
          maxLength: 2
        city:
          type: string
          maxLength: 50
        district:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        number:
          type: string
          maxLength: 10
        cep:
          type: string
          maxLength: 9
    PatchedAnnouncement:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        schedule:
          type: string
          maxLength: 30
        salary:
          type: number
          format: double
          nullable: true
        journey:
          type: string
          maxLength: 100
        vacancies:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        deadline:
          type: string
          format: date
        benefits:
          type: string
          nullable: true
          maxLength: 500
        requeriments:
          type: string
          nullable: true
          maxLength: 500
        description:
          type: string
          nullable: true
          maxLength: 500
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        curriculum:
          type: boolean
        course:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CourseEnum'
          - $ref: '#/components/schemas/NullEnum'
        total_workload:
          type: string
          nullable: true
          maxLength: 3
        inscripts:
          type: array
          items:
            $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        creator:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        images:
          type: string
          readOnly: true
    PatchedAnnouncement_image:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        announcement:
          type: integer
    PatchedRating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rate:
          allOf:
          - $ref: '#/components/schemas/RateEnum'
          minimum: -2147483648
          maximum: 2147483647
        user:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        announcement:
          allOf:
          - $ref: '#/components/schemas/SimpleAnnouncement'
          readOnly: true
    PatchedTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tag_name:
          type: string
          maxLength: 50
        icon:
          type: string
          format: uri
    PatchedUser:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        name:
          type: string
          title: Name of User
          maxLength: 255
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        cnpj:
          type: string
          nullable: true
          maxLength: 16
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 1000
        contact_mail:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 12
        instagram:
          type: string
          nullable: true
          maxLength: 20
        linkedin:
          type: string
          nullable: true
          maxLength: 50
        twitter:
          type: string
          nullable: true
          maxLength: 20
        ocupattion:
          type: string
          nullable: true
          maxLength: 100
        birth_date:
          type: string
          format: date
          nullable: true
        preference_tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        portfolio:
          type: string
          nullable: true
          maxLength: 200
        schooling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SchoolingEnum'
          - $ref: '#/components/schemas/NullEnum'
        saved_announcements:
          type: array
          items:
            $ref: '#/components/schemas/SimpleAnnouncement'
          readOnly: true
        registration_ifrn:
          type: string
          nullable: true
          maxLength: 14
        course:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CourseEnum'
          - $ref: '#/components/schemas/NullEnum'
        files:
          type: string
          readOnly: true
    PatchedUser_file:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
    RateEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - One
        * `2` - Two
        * `3` - Three
        * `4` - Four
        * `5` - Five
    Rating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rate:
          allOf:
          - $ref: '#/components/schemas/RateEnum'
          minimum: -2147483648
          maximum: 2147483647
        user:
          allOf:
          - $ref: '#/components/schemas/SimpleUser'
          readOnly: true
        announcement:
          allOf:
          - $ref: '#/components/schemas/SimpleAnnouncement'
          readOnly: true
      required:
      - announcement
      - id
      - rate
      - user
    SchoolingEnum:
      enum:
      - NAO_ALFABETIZADO
      - EF_INCOMPLETO
      - EF_COMPLETO
      - CURSANDO_EF
      - EM_INCOMPLETO
      - EM_COMPLETO
      - CURSANDO_EM
      - ES_INCOMPLETO
      - ES_COMPLETO
      - CURSANDO_ES
      - MESTRADO
      - DOUTORADO
      type: string
      description: |-
        * `NAO_ALFABETIZADO` - Não alfabetizado
        * `EF_INCOMPLETO` - Ensino fundamental incompleto
        * `EF_COMPLETO` - Ensino fundamental completo
        * `CURSANDO_EF` - Cursando ensino fundamental
        * `EM_INCOMPLETO` - Ensino médio incompleto
        * `EM_COMPLETO` - Ensino médio completo
        * `CURSANDO_EM` - Cursando ensino médio
        * `ES_INCOMPLETO` - Ensino superior incompleto
        * `ES_COMPLETO` - Ensino superior completo
        * `CURSANDO_ES` - Cursando ensino superior
        * `MESTRADO` - Mestrado
        * `DOUTORADO` - Doutorado
    SimpleAnnouncement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          maxLength: 255
        curriculum:
          type: boolean
      required:
      - company_name
      - curriculum
      - id
    SimpleUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        name:
          type: string
          title: Name of User
          maxLength: 255
      required:
      - email
      - id
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tag_name:
          type: string
          maxLength: 50
        icon:
          type: string
          format: uri
      required:
      - icon
      - id
      - tag_name
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        name:
          type: string
          title: Name of User
          maxLength: 255
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        cnpj:
          type: string
          nullable: true
          maxLength: 16
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 1000
        contact_mail:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 12
        instagram:
          type: string
          nullable: true
          maxLength: 20
        linkedin:
          type: string
          nullable: true
          maxLength: 50
        twitter:
          type: string
          nullable: true
          maxLength: 20
        ocupattion:
          type: string
          nullable: true
          maxLength: 100
        birth_date:
          type: string
          format: date
          nullable: true
        preference_tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        portfolio:
          type: string
          nullable: true
          maxLength: 200
        schooling:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SchoolingEnum'
          - $ref: '#/components/schemas/NullEnum'
        saved_announcements:
          type: array
          items:
            $ref: '#/components/schemas/SimpleAnnouncement'
          readOnly: true
        registration_ifrn:
          type: string
          nullable: true
          maxLength: 14
        course:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CourseEnum'
          - $ref: '#/components/schemas/NullEnum'
        files:
          type: string
          readOnly: true
      required:
      - address
      - email
      - files
      - groups
      - preference_tags
      - saved_announcements
    User_file:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
      required:
      - file
      - id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
